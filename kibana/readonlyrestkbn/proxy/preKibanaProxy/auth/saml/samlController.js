"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.SamlController=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _types=require("../../../core/common/types");var _rorLoggerFactory=require("../../../core/logging/rorLoggerFactory");var SamlController=function(){function a(e,r,t,o){var i=this;(0,_classCallCheck2.default)(this,a);this.config=e;this.samlStrategy=r;this.jwtSigner=t;this.legacyRenderer=o;this.logger=_rorLoggerFactory.RorLoggerFactory.getLoggerForFile(__filename);this.onLoginCallback=function(e,r){var t=e.user[i.config.usernameParameter];i.logger.debug('Obtained user name from profile: '+t);var o=i.getGroups(e.user);i.logger.debug('Obtained groups from profile: '+o);var a=i.createJWT(t,o,e.user);var n=i.legacyRenderer.renderJwtRedirect(a);r.send(n)};this.onLogout=function(o,a){try{return i.samlStrategy.logout(o,function(e,r){var t=JSON.stringify(o.user);i.logger.trace("Logout called for user: ".concat(t));o.logout();i.logger.trace("Logout called for user: ".concat(t,". redirecting to ").concat(r));a.redirect(r)})}catch(e){i.logger.error("Something went wrong with ".concat(i.config.connectorName," connector. "),e)}};this.onLogoutCallback=function(e,r){var t=JSON.stringify(e.user);i.logger.trace("Logout callback called for user: ".concat(t));e.logout();r.clearCookie(i.config.cookieConfig.name,{path:'/'});i.logger.trace("Logout called for user: ".concat(t,". redirecting to ").concat(i.config.logoutPath));r.send(i.legacyRenderer.renderRedirect(i.config.logoutPath))};this.onGetMetadata=function(e,r){r.type('application/xml');r.send(i.samlStrategy.generateServiceProviderMetadata(null,null))}}(0,_createClass2.default)(a,[{key:"getGroups",value:function e(r){var t=r[this.config.groupsParameter];if(!t){return[]}if(typeof t=='string'){return t.split(",")}return Object.assign([],t)}},{key:"createJWT",value:function e(r,t,o){var a=Object.assign({},o["_json"]);delete a[this.config.groupsParameter];var n=(0,_defineProperty2.default)({user:r,groups:t,assertion:a},_types.X_ROR_ORIGIN,this.config.connectorName);this.logger.debug('Created JWT for ROR with claims: '+JSON.stringify(n));return this.jwtSigner.sign(n)}}]);return a}();exports.SamlController=SamlController;